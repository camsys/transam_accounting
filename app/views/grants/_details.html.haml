.row.border-between
  .col-sm-6
    .row
      .col-sm-3
        - if @grant.grant_amendments.empty?
          = editable_field_tag(@grant, :grant_num, '* Grant #', required: true)
        - else
          .form-group
            %label.control-label.required
              * Grant #
            .display-value= @grant.grant_num
    .row
      .col-sm-3
        .form-group
          %label.control-label.string.required
            * Source
          = select_tag(:funding_source_type_id, options_from_collection_for_select(FundingSourceType.where.not(name: 'Agency'), "id", "name", @grant.sourceable.funding_source_type_id), class: 'form-control', include_blank: false)

    .row
      .col-sm-3= editable_association_tag(@grant, :global_sourceable, '* Program', FundingSource.where(funding_source_type: @grant.sourceable.funding_source_type).collect{|f| ["#{f.to_global_id}", "#{f.to_s}"]}, current_method: :global_sourceable)
    .row
      .col-sm-3= editable_association_tag(@grant, :owner, '* Owner', Organization.where.not(organization_type: OrganizationType.find_by(class_name: 'PlanningPartner')).collect{|f| [f.id, f.to_s]})
      .col-sm-9
        .row.other-fields-container
          -# need to pass an array of integers for existing JS to work so just set other as -1
          .col-sm-4.other-type-container{data: {other_type_ids: [-1]}}
            = editable_association_tag(@grant, :contributor, '* Contributor', [['multiple', 'Multiple'], ['-1', 'Other']] + Organization.where.not(organization_type: OrganizationType.find_by(class_name: 'PlanningPartner')).collect{|f| [f.id, f.to_s]}, current_value: @grant.has_multiple_contributors ? 'multiple' : (@grant.contributor.nil? ? '-1' : @grant.contributor_id))
          .col-sm-8.other-value-container
            = editable_field_tag(@grant, :other_contributor, required: false)


    .row
      .col-sm-9= editable_field_tag(@grant, :legislative_authorization, required: false)
    .row
      .col-sm-3= editable_field_tag(@grant, :award_date, '* Date of Award', type: 'date')
      .col-sm-5
        .form-group
          %label.control-label
            Date of Most Recent Amendment
          .display-value= format_as_date(@grant.grant_amendments.last.try(:created_at).try(:to_date), blank: '-')
      .col-sm-4
        .form-group
          %label.control-label
            Date of Closeout
          .display-value= format_as_date(@grant.closeout_date, blank: '-')

  .col-sm-6
    .row
      .col-sm-6
        .form-group
          %label.control-label
            * Method of Apportionment Structure
          .display-value Single Apportionment
      .col-sm-6
        = editable_association_tag(@grant, :fy_year, '* Grant Year', get_fiscal_years(Date.today-18.years,19).map{|x| [x[1], x[0]]}.reverse, current_method: :fy_year, suffix: '')
    .row
      .col-sm-3= editable_field_tag(@grant, :amount, '* Total Apportionment', required: true, type: 'currency')
    .row
      .col-sm-3
        .form-group
          %label.control-label
            Grant Development Method
          .display-value Directly Generated


:javascript
  var fed_programs = JSON.parse('#{FundingSource.where(funding_source_type: FundingSourceType.find_by(name: 'Federal')).map{|f| {value: f.to_global_id.to_s, text: f.to_s}}.to_json.html_safe}');
  var state_programs = JSON.parse('#{FundingSource.where(funding_source_type: FundingSourceType.find_by(name: 'State')).map{|f| {value: f.to_global_id.to_s, text: f.to_s}}.to_json.html_safe}');
  var local_programs = JSON.parse('#{FundingSource.where(funding_source_type: FundingSourceType.find_by(name: 'Local')).map{|f| {value: f.to_global_id.to_s, text: f.to_s}}.to_json.html_safe}');

  $(function(){
    var source = $('#funding_source_type_id')
    source.data('prev', source.val());

    $('#global_sourceable').on('hidden', function(e, reason) {
      if (reason === 'cancel') {
        source.val(source.data('prev'));
      } else if (reason == 'save') {
        source.data('prev', source.val());
      }
    });
        
  });
    
  $('#funding_source_type_id').on('change', function(e) {
    var id = $(this).val();
    var program = $('#global_sourceable')
    
    if (parseInt(id) == parseInt('#{FundingSourceType.find_by(name: 'Federal').id}')){
      program.editable('option', 'source', fed_programs);
    } else if (parseInt(id) == parseInt("#{FundingSourceType.find_by(name: 'State').id}")){
      program.editable('option', 'source', state_programs);
    } else if (parseInt(id) == parseInt("#{FundingSourceType.find_by(name: 'Local').id}")){
      program.editable('option', 'source', local_programs);
    }
    program.editable('show');
  });




